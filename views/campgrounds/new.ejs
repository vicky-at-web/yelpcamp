<% layout('layouts/boilerplate') -%>
    <style>
        #map {
            height: 500px;
            width: auto;
        }
    </style>

    <div class="row">
        <h1 class="text-center">New Campground</h1>
        <div class="col-6 offset-3">
            <form action="/campgrounds" method="post" class="formvalid" novalidate enctype="multipart/form-data">
                <div>
                    <label class="form-label" for="title">Title: </label>
                    <input class="form-control" autocomplete="off" type="text" id="title" name="campground[title]"
                        required>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Please give a title!
                    </div>
                </div>

                <br>
                <div>
                    <label class="form-label" for="location">Coordinates: </label>
                    <div class="input-group mb-3">
                        <input class="form-control" placeholder="lattitude" required autocomplete="off"
                             id="lat" readonly>
                             <input class="form-control" placeholder="lattitude" required autocomplete="off"
                             id="lat"  name="location[lat]">
                        <input class="form-control d-none" placeholder="longitude" required autocomplete="off" 
                            id="lon" readonly>
                            <input class="form-control d-none" placeholder="longitude" required autocomplete="off" 
                            id="lon" name="location[lon]">
                            
                    </div>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Please give a location!
                    </div>

                </div>
                <div>
                    <label class="form-label" for="location">Location: </label>
                    <div class="input-group mb-3">
                        <input class="form-control" placeholder="place" required autocomplete="off" type="text"
                            id="place" name="location[place]" required>

                    </div>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Please give a location!
                    </div>
                    <div id="map"></div>
                </div>

                <br>
                <div>
                    <label class="form-label" for="image">Image Url:</label>
                    <input class="form-control" multiple required autocomplete="off" type="file" id="image" name="image"
                        required>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Please upload an image!
                    </div>
                </div>
                <br>
                <div class="input-group mb-3" required>
                    <span class="input-group-text" required>$</span>
                    <input type="text" name="campground[price]" autocomplete="off" required class="form-control"
                        placeholder='0.00'>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Please give a price!
                    </div>
                </div>
                <br>
                <div>
                    <label class="form-label" for="des">Description:</label>
                    <textarea name="campground[description]" autocomplete="off" id="des" cols="20" rows="3"
                        class="form-control" required></textarea>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Not important, but a few lines will look better!
                    </div>
                </div>
                <br>
                <button class="btn btn-success">Add Campground</button>
                <br><br>
                <a href="/campgrounds">All campgrounds</a>
            </form>

        </div>
    </div>



    </div>
    </div>
    <script>
        maptilersdk.config.apiKey = 'VFBv4l3uLTmbnkv0Hqd4';


        const place = document.querySelector('#place');
        const lats = document.querySelectorAll('#lat');
        const lons = document.querySelectorAll('#lon')

        const map = new maptilersdk.Map({
            container: 'map',
            style: maptilersdk.MapStyle.STREETS,
            center: [16.62662018, 49.2125578],
            zoom: 14,
            hash: true,
        });

        const geocodingControl = new maptilersdkMaptilerGeocoder.GeocodingControl({});

        const handleGeocodingResults = (results) => {
            const coordinates = results[0].coordinates;
            const formattedAddress = results[0].formattedAddress; // Optional

            console.log("Coordinates:", coordinates);
            console.log("Formatted Address:", formattedAddress); // Optional

            // Use the retrieved coordinates and address data for further actions
            // (e.g., center the map on the searched location, display markers)
            map.setCenter(coordinates); // Example: Center the map on the searched location
        };

        // Function to handle geocoding errors
        const handleGeocodingError = (error) => {
            console.error("Geocoding error:", error);
            // Handle errors gracefully (e.g., display an error message to the user)
            alert("Geocoding failed! Please try again with a different search term.");
        };

        // Add the geocoding control to the map
        map.addControl(geocodingControl, 'top-left');

        // Event listener for geocoding results (corrected method)
        geocodingControl.addEventListener('response', (data) => {
            console.log(data)
            let data2 = data.detail
            const coordinates = data2.featureCollection.features[0].geometry.coordinates;
            const formattedAddress = data2.featureCollection.features[0].place_name;
            let LattitudeLongitude = data2.featureCollection.features[0].center// Optional


            // Look for district information in the context array

            console.log("Coordinates:", coordinates);
            console.log("Formatted Address:", formattedAddress);

            place.value = formattedAddress;

            lats.forEach(lat => {
                lat.value = LattitudeLongitude[0];
            })
            lons.forEach(lon => {
                lon.value = LattitudeLongitude[1]
            })

            map.setCenter(coordinates);

        });

        geocodingControl.addEventListener('error', handleGeocodingError);
    </script>